openapi: 3.0.3
info:
  title: Azion API
  version: 4.0.0
  x-logo:
    url: 'https://media.licdn.com/dms/image/C4D0BAQGiAXvdY1_Qug/company-logo_200_200/0/1630503244316/azionedge_logo?e=2147483647&v=beta&t=uBv-yxku8n2raAspGoI3Y_GAwajM5nYpQQBzs3_GpNk'
    backgroundColor: '#FFFFFF'
    altText: 'Example logo'
    href: 
  description: >
    ## Welcome to the Azion API

    ## Get started

    This documentation will guide you on the first steps of using the **Azion API**.

    ### Overview

    The **Azion API** is a _RESTful API_ based on _HTTPS_ requests that allows users to fully interact with Azion products through API requests.

    ### Requirements

    To run **Azion API** requests you need:

    - A [Real-Time Manager (RTM)](https://www.azion.com/en/documentation/products/accounts/creating-account/) account.
    - A [personal token](https://www.azion.com/en/documentation/products/accounts/personal-tokens/).
        

    ### Make API requests with curl (and other programming languages) snippets

    Azion API documentation offers code examples to make requests with the terminal, using the curl tool, or to automate them with programming languages.

    Postman offers HTTPS request snippets for many programming languages.

    To make Azion API requests with curl:

    1. Access the [Azion API documentation](https://api.azion.com).
    2. On the first column, select the endpoint and method you'd like to perform.
        

    - For example: **Accounts** > **Personal Tokens** > **POST Create Personal Token**.
        

    1. Navigate to **Example Request**.
    2. Change the authorization token header with your personal token.
    3. Change the request body properties with your data.
        

    Each endpoint has different properties and accepts different values, described in the documentation. The example below has the `name`, `expires_at`, and `description` properties.

    curl request stdin example:

    ``` bash
    curl --location 'https://api.azionapi.net/iam/personal_tokens' \
    --header 'Accept: application/json; version=3' \
    --header 'Authorization: Token aziona4FbA7K7EfT4OdK3E1N641289b6346b02b4' \
    --header 'Content-Type: application/json' \
    --data '{   
        "name": "My personal Token created with the Azion API",
        "expires_at": "2024-01-01T00:00",
        "description": "This token was created with Azion API"
    }'

    ```

    6\. Send your request.

    The success response should look like the `Example Response` in the method documentation.

    Stdout example:

    ``` bash
    {
      "uuid": "ef1a5k4e-t7o2-k9e4-n1d8-d07567bb0a13",
      "name": "My personal Token created with the Azion API",
      "key": "aziona4FbA7K7EfT4OdK3E1N641289b6346b02b4",
      "user_id": 999,
      "created": "2023-07-06T09:41:22.777299-03:00",
      "expires_at": "2024-01-01T00:00:00-03:00",
      "description": "This token was created with Azion API"
    }

    ```

    #### Implement requests with programming languages

    To change from curl to another desired programming language:

    1. Navigate to **LANGUAGE** on the Postman UI top bar.
    2. From the dropdown menu, select the desired programming language.
        

    The code snippet from `Example Request` will change to the desired programming language request snippet.

    ### Make API requests with Postman UI

    You can also run API requests directly from the **Postman UI**. To do so:

    1. Create a [Postman account](https://www.postman.com/postman-account/).
    2. Access the [Azion API documentation](https://api.azion.com).
    3. Click the _Run in Postman_ button.
    4. Select **Postman for web** or **Postman for** .
        

    This button will direct you to create a fork of the collection. Each saved request has its own reference documentation with descriptive information, request code, body parameters, authentication methods, headers, and response examples.

    5\. In the **Import Collection** screen select **My Workspace**.

    6\. Click the **Import** button.

    Your forked collection will appear on the second column, above **My Workspace**, named as **Azion | API Reference V3**.

    1. Select **Azion | API Reference V3** to reach the overview documentation.
    2. Navigate to the **Variables** tab.
        

    This tab collects all changeable variables that you need to set up with your personal data and your application's data. For example: your personal token or the Edge Application ID you're about to configure. Endpoints have different fields that you need to configure to be able to run API requests.

    3\. On the third column of the variables table (Current value), change **\[PERSONAL TOKEN\]** with your actual personal token.  
    4\. Change the current value of the other variables you are going to use.  
    5\. Click the **Save** button.

    Those changes will appear on the method request example documentation.

    To run your request:

    1. Go back to the first column, and expand the collection to view all categories (Tools, Build, Secure, Deploy, Observe).
    2. Select and expand the desired category to reveal its product endpoints.
    3. Select the desired product to reveal its HTTP methods.
    4. Select the desired HTTP method. For this guide example, select **Accounts** > **Personal Tokens** > **GET List all personal tokens**.
        

    Postman will open the selected method documentation, that contains the _API URL_ (with the URL params and `Send` button), _reference documentation_, _authorization methods_, _headers_, _params_, _request example_, and _response example_.

    6\. Select the desired query params in the **Params** tab. For this guide, disable the **search** param.  
    7\. Click the **Send** button.

    The request response will appear on the button.

    > For `POST`, `PUT`, and `PATCH`, you need to fill up the request body on the **Body** tab. Select the **raw** option and make sure **JSON** is selected. Write the request body and click the **Send** button. 
      

    ---

    ### **Base URL**

    The base URL of the API that must be used is:

    `https://api.azionapi.net/`

    ---

    ## Features

    ### **HTTP methods**

    Each HTTP method defines the type of operation that will be run.


    ---

    ### **Status codes**

    The HTTP return code defines the status—successful or not—after the requested operation is run.

    ### **HTTP headers**

    All requests must be generated with the HTTP header specifying the desired code format for responses and the API version used. The current version of the API is `3` and the format is `application/json`.

    ```
    Accept: application/json; version=3

    ```

    ---

    ### **Rate limit**

    The limit of operations that can be run via the API is defined by three HTTP response headers:

    \* **X-ratelimit-limit:** number of operations allowed in one time-frame.  
    \* **X-ratelimit-remaining:** number of operations still available in one time-frame.  
    \* **X-ratelimit-reset:** the date and time, in ISO 8601 format. It represents the point in the future when the time-frame will be closed and when the limits will, therefore, be reset.

    Example of HTTP response headers and a request:

    ```
    Date: Thu, 02 Nov 2017 12:30:28 GMT
    X-ratelimit-remaining: 199
    X-ratelimit-limit: 200
    X-ratelimit-reset: 2017-11-02T12:31:28.675446

    ```

    In the example provided, 200 operations are allowed within a 1-minute time frame. Of those, there are 199 still available, because one has already been run. The total limit will be reset after 1 minute.

    When the X-ratelimit-limit is reached, or in other words, when the X-ratelimit-remaining reaches zero, the API will give the error, HTTP 429 TOO MANY REQUESTS. If your application receives this error, you'll need to wait until the time defined in X-ratelimit-reset has passed, to make another request.

    \* **X-ratelimit-limit by product**

    The X-ratelimit limit variation by product is:

    \* **Real-Time Purge:** 200 requests per minute; except for the Wildcard purge, which is 2000 a day.

    > The rate-limit values are based on the `client_id`. 
      

    ---

    ### **Optional parameters**

    In this version, it's possible to include some optional parameters as part of the GET method. It can help and modify the form in which your data will be returned.

    You can combine these parameters to get the result you want.

    They are:

    ---

    ### **Request example**

    You can use one parameter, or a combination. Check the example below, which uses all of them in the same request.

    ```
    curl --location 'https://api.azionapi.net/domains?order_by=name&page_size=20&sort=desc&page=3' \
    --header 'Accept: application/json; version=3' \
    --header 'Authorization: Token 2909f3932069047f4736dc87e72baaddd19c9f75'

    ```

    ---

    # Authentication types

    Operation authentication and authorization via Azion API are done through Tokens. The option through Personal Tokens is also available.

    The first step is to create the Token by authenticating a registered user on [Real-Time Manager](https://). If you don't have an account, [check our documentation to create one](https://). If you're part of an enterprise account, refer to your account owner to create one.

    Read more:  
    [Tools &gt; Tokens](https://)  
    [Tools &gt; Personal Tokens](https://)

    ---

    ## Encoding Username and Password

    Only token creation and canceling operations are performed through the Basic Authentication method, with username and password. This action can be performed directly in the Postman API interface.

    You can create and revoke the token through the API itself, but you must encode your username and password in base64.

    Base64 encoding can be done from the command line on a Unix terminal:

    ```
    $ echo 'user@domain:password'|base64
    dXNlckBkb21haW46cGFzc3dvcmQK

    ```

    ---

    ## Basic Auth

    Basic authentication involves sending a verified username and password with your request.

    1. In the **Tools** folder, select **Token.**
    2. Then, select `POST`/tokens.
    3. In the **Authorization** tab, select **Basic Auth** from the **Type** dropdown list.
    4. Enter your API username and password in the **Username** and **Password** fields.
    5. Click **Send**.
        

    In the request **Headers**, the Authorization header passes the API a Base64 encoded string representing your username and password values

    Read more: [Tools &gt; Tokens](https://)
paths:
  /v4/edge/applications/{edgeApplicationId}/error_responses:
    get:
      operationId: applicationsErrorResponsesList
      description: ''
      parameters:
      - in: path
        name: edgeApplicationId
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Applications
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedErrorResponsesList'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /v4/edge/applications/{edgeApplicationId}/error_responses/{id}:
    get:
      operationId: applicationsErrorResponsesRetrieve
      description: ''
      parameters:
      - in: path
        name: edgeApplicationId
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Applications
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorResponses'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    put:
      operationId: applicationsErrorResponsesUpdate
      description: ''
      parameters:
      - in: path
        name: edgeApplicationId
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponsesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ErrorResponsesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ErrorResponsesRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorResponses'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorResponses'
          description: ''
    patch:
      operationId: applicationsErrorResponsesPartialUpdate
      description: ''
      parameters:
      - in: path
        name: edgeApplicationId
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedErrorResponsesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedErrorResponsesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedErrorResponsesRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorResponses'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorResponses'
          description: ''
  /v4/edge/purge/{purgeType}:
    post:
      operationId: purgeCreate
      description: Viewset for the URL purge API.
      parameters:
      - in: path
        name: purgeType
        schema:
          type: string
          enum:
          - cachekey
          - url
          - wildcard
        description: 'type of purge: URL, Wildcard or Cachekey'
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurgeInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurgeInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurgeInputRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePurgeInput'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePurgeInput'
          description: ''
  /v4/edge/waf/{wafId}/allowed_rules:
    get:
      operationId: wafAllowedRulesList
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: wafId
        schema:
          type: string
        required: true
      tags:
      - WAF
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWAFRuleList'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      operationId: wafAllowedRulesCreate
      description: ''
      parameters:
      - in: path
        name: wafId
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - WAF
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WAFRuleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WAFRuleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WAFRuleRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWAFRule'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWAFRule'
          description: ''
  /v4/edge/waf/{wafId}/allowed_rules/{id}:
    get:
      operationId: wafAllowedRulesRetrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: wafId
        schema:
          type: string
        required: true
      tags:
      - WAF
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWAFRule'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    put:
      operationId: wafAllowedRulesUpdate
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: wafId
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - WAF
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WAFRuleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WAFRuleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WAFRuleRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWAFRule'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWAFRule'
          description: ''
    patch:
      operationId: wafAllowedRulesPartialUpdate
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: wafId
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - WAF
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWAFRuleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWAFRuleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWAFRuleRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWAFRule'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWAFRule'
          description: ''
    delete:
      operationId: wafAllowedRulesDestroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: wafId
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - WAF
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDeleteWAFRule'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWAFRule'
          description: ''
        '204':
          description: No Content
          content:
            application/json:
              example:
                status: ok
  /v4/iam/account:
    get:
      operationId: accountRetrieve
      description: ''
      tags:
      - Account
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAccount'
          description: ''
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
    patch:
      operationId: accountPartialUpdate
      description: ''
      tags:
      - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAccountRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAccount'
          description: ''
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAccount'
          description: ''
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
  /v4/iam/accounts:
    get:
      operationId: accountsList
      description: ''
      parameters:
      - in: query
        name: account_type
        schema:
          type: string
          enum:
          - client
          - group
          - reseller
        description: The type of account to be filtered.
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: page_size
        schema:
          type: integer
        description: A numeric value that indicates the number of items per page.
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Accounts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccountList'
          description: ''
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
    post:
      operationId: accountsCreate
      description: ''
      tags:
      - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAccount'
          description: ''
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAccount'
          description: ''
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
  /v4/iam/accounts/{id}:
    get:
      operationId: accountsRetrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Accounts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAccount'
          description: ''
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
    put:
      operationId: accountsUpdate
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAccount'
          description: ''
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAccount'
          description: ''
    patch:
      operationId: accountsPartialUpdate
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAccountRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAccount'
          description: ''
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAccount'
          description: ''
  /v4/iam/additional_data:
    get:
      operationId: additionalDataRetrieve
      description: ''
      tags:
      - Additional data
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /v4/iam/identity_providers:
    get:
      operationId: identityProvidersRetrieve
      description: ''
      tags:
      - Identity providers
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OIDCIdP'
          description: ''
  /v4/iam/identity_providers/oidc:
    post:
      operationId: identityProvidersOidcCreate
      description: ''
      tags:
      - Identity providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OIDCIdPRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OIDCIdPRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OIDCIdPRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OIDCIdP'
          description: ''
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
  /v4/iam/identity_providers/oidc/{uuid}:
    get:
      operationId: identityProvidersOidcRetrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - Identity providers
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OIDCIdP'
          description: ''
    put:
      operationId: identityProvidersOidcUpdate
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Identity providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OIDCIdPRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OIDCIdPRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OIDCIdPRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OIDCIdP'
          description: ''
    patch:
      operationId: identityProvidersOidcPartialUpdate
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Identity providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOIDCIdPRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOIDCIdPRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOIDCIdPRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OIDCIdP'
          description: ''
    delete:
      operationId: identityProvidersOidcDestroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Identity providers
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No Content
          content:
            application/json:
              example:
                status: ok
  /v4/iam/identity_providers/saml2:
    post:
      operationId: identityProvidersSaml2Create
      description: ''
      tags:
      - Identity providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMLIdPRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SAMLIdPRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SAMLIdPRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLIdP'
          description: ''
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
  /v4/iam/identity_providers/saml2/{uuid}:
    get:
      operationId: identityProvidersSaml2Retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - Identity providers
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLIdP'
          description: ''
    put:
      operationId: identityProvidersSaml2Update
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Identity providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMLIdPRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SAMLIdPRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SAMLIdPRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLIdP'
          description: ''
    patch:
      operationId: identityProvidersSaml2PartialUpdate
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Identity providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSAMLIdPRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSAMLIdPRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSAMLIdPRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLIdP'
          description: ''
    delete:
      operationId: identityProvidersSaml2Destroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Identity providers
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No Content
          content:
            application/json:
              example:
                status: ok
  /v4/iam/identity_providers/social:
    get:
      operationId: identityProvidersSocialRetrieve
      description: ''
      tags:
      - Identity providers
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /v4/iam/permissions:
    get:
      operationId: permissionsList
      description: ''
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Permissions
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPermissionList'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /v4/iam/personal_tokens:
    get:
      operationId: personalTokensList
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Personal tokens
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPersonalTokenList'
          description: ''
    post:
      operationId: personalTokensCreate
      description: ''
      tags:
      - Personal tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalTokenRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PersonalTokenRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PersonalTokenRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalToken'
          description: ''
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
  /v4/iam/personal_tokens/{uuid}:
    get:
      operationId: personalTokensRetrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Personal tokens
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalToken'
          description: ''
    delete:
      operationId: personalTokensDestroy
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Personal tokens
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No Content
          content:
            application/json:
              example:
                status: ok
  /v4/iam/teams:
    get:
      operationId: teamsList
      description: ''
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Teams
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeamList'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      operationId: teamsCreate
      description: ''
      tags:
      - Teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TeamRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TeamRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTeam'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTeam'
          description: ''
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
  /v4/iam/teams/{id}:
    get:
      operationId: teamsRetrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Teams
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTeam'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    put:
      operationId: teamsUpdate
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TeamRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TeamRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTeam'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTeam'
          description: ''
    patch:
      operationId: teamsPartialUpdate
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTeamRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTeamRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTeamRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTeam'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTeam'
          description: ''
    delete:
      operationId: teamsDestroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Teams
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDeleteTeam'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTeam'
          description: ''
        '204':
          description: No Content
          content:
            application/json:
              example:
                status: ok
  /v4/iam/user:
    get:
      operationId: userRetrieve
      description: ''
      tags:
      - User
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUserPreferences'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      operationId: userPartialUpdate
      description: ''
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserPreferencesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserPreferencesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserPreferencesRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUserPreferences'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUserPreferences'
          description: ''
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
  /v4/iam/user/password:
    post:
      operationId: userPasswordCreate
      description: ''
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetNewPasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetNewPasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetNewPasswordRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
  /v4/iam/users:
    get:
      operationId: usersList
      description: ''
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomUserList'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      operationId: usersCreate
      description: ''
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUserRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCustomUser'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCustomUser'
          description: ''
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
  /v4/iam/users/{id}:
    get:
      operationId: usersRetrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCustomUser'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    put:
      operationId: usersUpdate
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUserRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCustomUser'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCustomUser'
          description: ''
    patch:
      operationId: usersPartialUpdate
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomUserRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCustomUser'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCustomUser'
          description: ''
    delete:
      operationId: usersDestroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDeleteCustomUser'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCustomUser'
          description: ''
        '204':
          description: No Content
          content:
            application/json:
              example:
                status: ok
  /v4/storage/buckets:
    get:
      operationId: root_list
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBucketList'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      operationId: root_create
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BucketCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BucketCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BucketCreate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBucket'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBucket'
          description: ''
      parameters:
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
  /v4/storage/buckets/{bucket_name}/objects:
    get:
      operationId: objects_list
      description: ''
      parameters:
      - in: path
        name: bucket_name
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Objects
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBucketObjectList'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /v4/storage/buckets/{bucket_name}/objects/{object_key}:
    get:
      operationId: objects_retrieve
      description: Download the object file from bucket storage.
      parameters:
      - in: path
        name: bucket_name
        schema:
          type: string
        required: true
      - in: path
        name: object_key
        schema:
          type: string
        required: true
      tags:
      - Objects
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      operationId: objects_create
      description: Create a new object by uploading a new file to bucket storage.
      parameters:
      - in: path
        name: bucket_name
        schema:
          type: string
        required: true
      - in: path
        name: object_key
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Objects
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/PostStorageApiBucketsBucketNameObjectsObjectKeyRequestBody'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success object operation'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    put:
      operationId: objects_update
      description: Update the object by uploading a new file to bucket storage.
      parameters:
      - in: path
        name: bucket_name
        schema:
          type: string
        required: true
      - in: path
        name: object_key
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Objects
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/PutStorageApiBucketsBucketNameObjectsObjectKeyRequestBody'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success object operation'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      operationId: objects_destroy
      description: Create a new object by uploading a new file to bucket storage.
      parameters:
      - in: path
        name: bucket_name
        schema:
          type: string
        required: true
      - in: path
        name: object_key
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      tags:
      - Objects
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success object operation'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '204':
          description: No Content
          content:
            application/json:
              example:
                status: ok
  /v4/storage/buckets/{name}:
    patch:
      operationId: root_partial_update
      description: ''
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBucket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBucket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBucket'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBucket'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBucket'
          description: ''
    delete:
      operationId: root_destroy
      description: ''
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: header
        name: Content-Type
        required: true
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request, must be "application/json"
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDeleteBucket'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBucket'
          description: ''
        '204':
          description: No Content
          content:
            application/json:
              example:
                status: ok
components:
  schemas:
    ErrorResponses:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        edge_application_id:
          type: integer
          readOnly: true
        origin_id:
          type: integer
          nullable: true
        error_responses:
          type: array
          items:
            $ref: '#/components/schemas/NestedErrorResponse'
      required:
      - edge_application_id
      - error_responses
      - id
      - name
      additionalProperties: false
    ErrorResponsesRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        origin_id:
          type: integer
          nullable: true
        error_responses:
          type: array
          items:
            $ref: '#/components/schemas/NestedErrorResponseRequest'
      required:
      - error_responses
      - name
      additionalProperties: false
    LayerEnum:
      enum:
      - edge_caching
      - l2_caching
      type: string
      additionalProperties: false
    NestedErrorResponse:
      type: object
      properties:
        code:
          type: string
          title: Status code
          maxLength: 10
        timeout:
          type: integer
          title: Error Caching TTL (seconds)
        uri:
          type: string
          nullable: true
          maxLength: 250
        custom_status_code:
          type: string
          nullable: true
          maxLength: 250
      required:
      - code
      - timeout
      additionalProperties: false
    NestedErrorResponseRequest:
      type: object
      properties:
        code:
          type: string
          title: Status code
          maxLength: 10
        timeout:
          type: integer
          title: Error Caching TTL (seconds)
        uri:
          type: string
          nullable: true
          maxLength: 250
        custom_status_code:
          type: string
          nullable: true
          maxLength: 250
      required:
      - code
      - timeout
      additionalProperties: false
    PaginatedErrorResponsesList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponses'
      additionalProperties: false
    PaginatedWAFRuleList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/WAFRule'
      additionalProperties: false
    PatchedErrorResponsesRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        origin_id:
          type: integer
          nullable: true
        error_responses:
          type: array
          items:
            $ref: '#/components/schemas/NestedErrorResponseRequest'
      additionalProperties: false
    PatchedWAFRuleRequest:
      type: object
      properties:
        main_rule_id:
          type: integer
          minimum: 0
        description:
          type: string
          nullable: true
          description: Description
          maxLength: 255
        path:
          type: string
          nullable: true
          description: Path
          maxLength: 255
        status:
          type: boolean
        use_regex:
          type: boolean
      additionalProperties: false
    PurgeInput:
      type: object
      description: Serialize the incoming purge request.
      properties:
        items:
          type: array
          items:
            type: string
          minItems: 1
        layer:
          allOf:
          - $ref: '#/components/schemas/LayerEnum'
          default: edge_caching
      required:
      - items
      additionalProperties: false
    PurgeInputRequest:
      type: object
      description: Serialize the incoming purge request.
      properties:
        items:
          type: array
          items:
            type: string
          minItems: 1
        layer:
          allOf:
          - $ref: '#/components/schemas/LayerEnum'
          default: edge_caching
      required:
      - items
      additionalProperties: false
    ResponseDeleteWAFRule:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/StateEnum'
        data:
          allOf:
          - $ref: '#/components/schemas/WAFRule'
          nullable: true
      required:
      - data
      - state
      additionalProperties: false
    ResponseErrorResponses:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/StateEnum'
        data:
          $ref: '#/components/schemas/ErrorResponses'
      required:
      - data
      - state
      additionalProperties: false
    ResponsePurgeInput:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/StateEnum'
        data:
          $ref: '#/components/schemas/PurgeInput'
      required:
      - data
      - state
      additionalProperties: false
    ResponseWAFRule:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/StateEnum'
        data:
          $ref: '#/components/schemas/WAFRule'
      required:
      - data
      - state
      additionalProperties: false
    StateEnum:
      enum:
      - pending
      - executed
      type: string
      additionalProperties: false
    WAFRule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        main_rule_id:
          type: integer
          minimum: 0
        description:
          type: string
          nullable: true
          description: Description
          maxLength: 255
        path:
          type: string
          nullable: true
          description: Path
          maxLength: 255
        last_editor:
          type: string
          readOnly: true
        last_modified:
          type: string
          readOnly: true
        status:
          type: boolean
        use_regex:
          type: boolean
      required:
      - id
      - last_editor
      - last_modified
      - main_rule_id
      additionalProperties: false
    WAFRuleRequest:
      type: object
      properties:
        main_rule_id:
          type: integer
          minimum: 0
        description:
          type: string
          nullable: true
          description: Description
          maxLength: 255
        path:
          type: string
          nullable: true
          description: Path
          maxLength: 255
        status:
          type: boolean
        use_regex:
          type: boolean
      required:
      - main_rule_id
      additionalProperties: false
    Account:
      oneOf:
      - $ref: '#/components/schemas/Client'
      - $ref: '#/components/schemas/Brand'
      - $ref: '#/components/schemas/Group'
      - $ref: '#/components/schemas/Reseller'
      discriminator:
        propertyName: account_type
        mapping:
          client: '#/components/schemas/Client'
          brand: '#/components/schemas/Brand'
          group: '#/components/schemas/Group'
          reseller: '#/components/schemas/Reseller'
      additionalProperties: false
    AccountRequest:
      oneOf:
      - $ref: '#/components/schemas/ClientRequest'
      - $ref: '#/components/schemas/BrandRequest'
      - $ref: '#/components/schemas/GroupRequest'
      - $ref: '#/components/schemas/ResellerRequest'
      discriminator:
        propertyName: account_type
        mapping:
          client: '#/components/schemas/ClientRequest'
          brand: '#/components/schemas/BrandRequest'
          group: '#/components/schemas/GroupRequest'
          reseller: '#/components/schemas/ResellerRequest'
      additionalProperties: false
    Brand:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
        company_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
        unique_identifier:
          type: string
          maxLength: 20
        is_social_login_enabled:
          type: boolean
          title: Social Login
          description: If this field is checked, the Social Login will be available
            to all users in this account.
        is_enabled_mfa_to_all_users:
          type: boolean
          title: Enforce Multi-Factor Authentication
          description: If this field is checked, the MFA will be mandatory for all
            users of this account.
        is_deleted:
          type: boolean
          readOnly: true
          title: Deleted
        parent_id:
          type: integer
          nullable: true
          readOnly: true
      required:
      - id
      - is_deleted
      - name
      - parent_id
      additionalProperties: false
    BrandRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 150
        company_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
        unique_identifier:
          type: string
          maxLength: 20
        is_social_login_enabled:
          type: boolean
          title: Social Login
          description: If this field is checked, the Social Login will be available
            to all users in this account.
        is_enabled_mfa_to_all_users:
          type: boolean
          title: Enforce Multi-Factor Authentication
          description: If this field is checked, the MFA will be mandatory for all
            users of this account.
      required:
      - name
      additionalProperties: false
    Client:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
        company_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
        unique_identifier:
          type: string
          maxLength: 20
        is_social_login_enabled:
          type: boolean
          title: Social Login
          description: If this field is checked, the Social Login will be available
            to all users in this account.
        is_enabled_mfa_to_all_users:
          type: boolean
          title: Enforce Multi-Factor Authentication
          description: If this field is checked, the MFA will be mandatory for all
            users of this account.
        company_size:
          type: string
          nullable: true
          maxLength: 50
        job_function:
          type: string
          nullable: true
          maxLength: 50
        country:
          type: string
          readOnly: true
        first_login:
          type: boolean
        address:
          type: string
          maxLength: 150
        complement:
          type: string
          nullable: true
          maxLength: 150
        city:
          type: string
        postal_code:
          type: string
          nullable: true
          maxLength: 15
        region:
          type: string
          readOnly: true
        role:
          type: string
          nullable: true
          maxLength: 50
        client_id:
          type: string
          readOnly: true
        billing_emails:
          type: string
          nullable: true
          maxLength: 255
        status:
          $ref: '#/components/schemas/StatusEnum'
        is_trustworthy:
          type: boolean
        is_deleted:
          type: boolean
          readOnly: true
          title: Deleted
        map_group_id:
          type: integer
          nullable: true
        parent_id:
          type: integer
          nullable: true
          readOnly: true
      required:
      - address
      - city
      - client_id
      - country
      - id
      - is_deleted
      - name
      - parent_id
      - region
      additionalProperties: false
    ClientRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 150
        company_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
        unique_identifier:
          type: string
          maxLength: 20
        is_social_login_enabled:
          type: boolean
          title: Social Login
          description: If this field is checked, the Social Login will be available
            to all users in this account.
        is_enabled_mfa_to_all_users:
          type: boolean
          title: Enforce Multi-Factor Authentication
          description: If this field is checked, the MFA will be mandatory for all
            users of this account.
        company_size:
          type: string
          nullable: true
          maxLength: 50
        job_function:
          type: string
          nullable: true
          maxLength: 50
        first_login:
          type: boolean
        address:
          type: string
          maxLength: 150
        complement:
          type: string
          nullable: true
          maxLength: 150
        city:
          type: string
        postal_code:
          type: string
          nullable: true
          maxLength: 15
        role:
          type: string
          nullable: true
          maxLength: 50
        billing_emails:
          type: string
          nullable: true
          maxLength: 255
        status:
          $ref: '#/components/schemas/StatusEnum'
        is_trustworthy:
          type: boolean
        map_group_id:
          type: integer
          nullable: true
      required:
      - address
      - city
      - name
      additionalProperties: false
    CustomUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        email:
          type: string
          format: email
          maxLength: 254
        is_staff:
          type: boolean
          readOnly: true
          title: Staff Status
        is_active:
          type: boolean
          readOnly: true
          title: Active
        phone:
          type: string
          maxLength: 21
          pattern: ^[+\d()\-/.\s]*$
        country_call_code:
          type: string
          maxLength: 20
        mobile:
          type: string
          maxLength: 21
          pattern: ^[+\d()\-/.\s]*$
        date_joined:
          type: string
          format: date-time
          readOnly: true
        timezone:
          $ref: '#/components/schemas/TimezoneEnum'
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageEnum'
          readOnly: true
        is_trial:
          type: boolean
          readOnly: true
          title: Trial
        two_factor_enabled:
          type: boolean
          title: Two-Factor
        is_account_owner:
          type: boolean
          default: false
        teams:
          type: array
          items:
            $ref: '#/components/schemas/UserTeams'
          readOnly: true
      required:
      - date_joined
      - email
      - first_name
      - id
      - is_active
      - is_staff
      - is_trial
      - language
      - last_login
      - last_name
      - Teams
      additionalProperties: false
    CustomUserRequest:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 21
          pattern: ^[+\d()\-/.\s]*$
        country_call_code:
          type: string
          maxLength: 20
        mobile:
          type: string
          maxLength: 21
          pattern: ^[+\d()\-/.\s]*$
        timezone:
          $ref: '#/components/schemas/TimezoneEnum'
        two_factor_enabled:
          type: boolean
          title: Two-Factor
        is_account_owner:
          type: boolean
          default: false
        password:
          type: string
          writeOnly: true
          maxLength: 128
        teams_ids:
          type: array
          items:
            type: integer
          writeOnly: true
          default: []
      required:
      - email
      - first_name
      - last_name
      additionalProperties: false
    Group:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
        company_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
        unique_identifier:
          type: string
          maxLength: 20
        is_social_login_enabled:
          type: boolean
          title: Social Login
          description: If this field is checked, the Social Login will be available
            to all users in this account.
        is_enabled_mfa_to_all_users:
          type: boolean
          title: Enforce Multi-Factor Authentication
          description: If this field is checked, the MFA will be mandatory for all
            users of this account.
        company_size:
          type: string
          nullable: true
          maxLength: 50
        job_function:
          type: string
          nullable: true
          maxLength: 50
        country:
          type: string
          readOnly: true
        first_login:
          type: boolean
        address:
          type: string
          maxLength: 150
        complement:
          type: string
          nullable: true
          maxLength: 150
        city:
          type: string
        postal_code:
          type: string
          nullable: true
          maxLength: 15
        region:
          type: string
          readOnly: true
        role:
          type: string
          nullable: true
          maxLength: 50
        billing_emails:
          type: string
          nullable: true
          maxLength: 255
        online_sales_region_id:
          type: integer
          nullable: true
        is_online_reseller:
          type: boolean
          title: Online Groups
        code:
          type: string
          title: Groups Code
          maxLength: 10
        is_deleted:
          type: boolean
          readOnly: true
          title: Deleted
        parent_id:
          type: integer
          nullable: true
          readOnly: true
      required:
      - address
      - city
      - country
      - id
      - is_deleted
      - name
      - parent_id
      - region
      additionalProperties: false
    GroupRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 150
        company_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
        unique_identifier:
          type: string
          maxLength: 20
        is_social_login_enabled:
          type: boolean
          title: Social Login
          description: If this field is checked, the Social Login will be available
            to all users in this account.
        is_enabled_mfa_to_all_users:
          type: boolean
          title: Enforce Multi-Factor Authentication
          description: If this field is checked, the MFA will be mandatory for all
            users of this account.
        company_size:
          type: string
          nullable: true
          maxLength: 50
        job_function:
          type: string
          nullable: true
          maxLength: 50
        first_login:
          type: boolean
        address:
          type: string
          maxLength: 150
        complement:
          type: string
          nullable: true
          maxLength: 150
        city:
          type: string
        postal_code:
          type: string
          nullable: true
          maxLength: 15
        role:
          type: string
          nullable: true
          maxLength: 50
        billing_emails:
          type: string
          nullable: true
          maxLength: 255
        online_sales_region_id:
          type: integer
          nullable: true
        is_online_reseller:
          type: boolean
          title: Online Groups
        code:
          type: string
          title: Groups Code
          maxLength: 10
      required:
      - address
      - city
      - name
      additionalProperties: false
    LanguageEnum:
      enum:
      - af
      - ar
      - ar-dz
      - ast
      - az
      - bg
      - be
      - bn
      - br
      - bs
      - ca
      - cs
      - cy
      - da
      - de
      - dsb
      - el
      - en
      - en-au
      - en-gb
      - eo
      - es
      - es-ar
      - es-co
      - es-mx
      - es-ni
      - es-ve
      - et
      - eu
      - fa
      - fi
      - fr
      - fy
      - ga
      - gd
      - gl
      - he
      - hi
      - hr
      - hsb
      - hu
      - hy
      - ia
      - id
      - ig
      - io
      - is
      - it
      - ja
      - ka
      - kab
      - kk
      - km
      - kn
      - ko
      - ky
      - lb
      - lt
      - lv
      - mk
      - ml
      - mn
      - mr
      - my
      - nb
      - ne
      - nl
      - nn
      - os
      - pa
      - pl
      - pt
      - pt-br
      - ro
      - ru
      - sk
      - sl
      - sq
      - sr
      - sr-latn
      - sv
      - sw
      - ta
      - te
      - tg
      - th
      - tk
      - tr
      - tt
      - udm
      - uk
      - ur
      - uz
      - vi
      - zh-hans
      - zh-hant
      type: string
      additionalProperties: false
    OIDCIdP:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 50
        is_active:
          type: boolean
        authorization_url:
          type: string
          format: uri
          maxLength: 250
        userinfo_url:
          type: string
          format: uri
          maxLength: 250
        token_url:
          type: string
          format: uri
          maxLength: 250
        client_id:
          type: string
          maxLength: 256
        scopes:
          type: array
          items:
            type: string
        login_url:
          type: string
          readOnly: true
        redirect_url:
          type: string
          readOnly: true
        response_mode:
          allOf:
          - $ref: '#/components/schemas/ResponseModeEnum'
          readOnly: true
      required:
      - authorization_url
      - client_id
      - is_active
      - login_url
      - name
      - redirect_url
      - response_mode
      - scopes
      - token_url
      - userinfo_url
      - uuid
      additionalProperties: false
    OIDCIdPRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
        is_active:
          type: boolean
        authorization_url:
          type: string
          format: uri
          maxLength: 250
        userinfo_url:
          type: string
          format: uri
          maxLength: 250
        token_url:
          type: string
          format: uri
          maxLength: 250
        client_id:
          type: string
          maxLength: 256
        client_secret:
          type: string
          writeOnly: true
          maxLength: 256
        scopes:
          type: array
          items:
            type: string
      required:
      - authorization_url
      - client_id
      - client_secret
      - is_active
      - name
      - scopes
      - token_url
      - userinfo_url
      additionalProperties: false
    PaginatedAccountList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Account'
      additionalProperties: false
    PaginatedCustomUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomUser'
      additionalProperties: false
    PaginatedPermissionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
      additionalProperties: false
    PaginatedPersonalTokenList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PersonalToken'
      additionalProperties: false
    PaginatedTeamList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Team'
      additionalProperties: false
    PatchedAccountRequest:
      oneOf:
      - $ref: '#/components/schemas/PatchedClientRequest'
      - $ref: '#/components/schemas/PatchedBrandRequest'
      - $ref: '#/components/schemas/PatchedGroupRequest'
      - $ref: '#/components/schemas/PatchedResellerRequest'
      discriminator:
        propertyName: account_type
        mapping:
          client: '#/components/schemas/PatchedClientRequest'
          brand: '#/components/schemas/PatchedBrandRequest'
          group: '#/components/schemas/PatchedGroupRequest'
          reseller: '#/components/schemas/PatchedResellerRequest'
      additionalProperties: false
    PatchedBrandRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 150
        company_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
        unique_identifier:
          type: string
          maxLength: 20
        is_social_login_enabled:
          type: boolean
          title: Social Login
          description: If this field is checked, the Social Login will be available
            to all users in this account.
        is_enabled_mfa_to_all_users:
          type: boolean
          title: Enforce Multi-Factor Authentication
          description: If this field is checked, the MFA will be mandatory for all
            users of this account.
      additionalProperties: false
    PatchedClientRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 150
        company_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
        unique_identifier:
          type: string
          maxLength: 20
        is_social_login_enabled:
          type: boolean
          title: Social Login
          description: If this field is checked, the Social Login will be available
            to all users in this account.
        is_enabled_mfa_to_all_users:
          type: boolean
          title: Enforce Multi-Factor Authentication
          description: If this field is checked, the MFA will be mandatory for all
            users of this account.
        company_size:
          type: string
          nullable: true
          maxLength: 50
        job_function:
          type: string
          nullable: true
          maxLength: 50
        first_login:
          type: boolean
        address:
          type: string
          maxLength: 150
        complement:
          type: string
          nullable: true
          maxLength: 150
        city:
          type: string
        postal_code:
          type: string
          nullable: true
          maxLength: 15
        role:
          type: string
          nullable: true
          maxLength: 50
        billing_emails:
          type: string
          nullable: true
          maxLength: 255
        status:
          $ref: '#/components/schemas/StatusEnum'
        is_trustworthy:
          type: boolean
        map_group_id:
          type: integer
          nullable: true
      additionalProperties: false
    PatchedCustomUserRequest:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 21
          pattern: ^[+\d()\-/.\s]*$
        country_call_code:
          type: string
          maxLength: 20
        mobile:
          type: string
          maxLength: 21
          pattern: ^[+\d()\-/.\s]*$
        timezone:
          $ref: '#/components/schemas/TimezoneEnum'
        two_factor_enabled:
          type: boolean
          title: Two-Factor
        is_account_owner:
          type: boolean
          default: false
        password:
          type: string
          writeOnly: true
          maxLength: 128
        teams_ids:
          type: array
          items:
            type: integer
          writeOnly: true
          default: []
      additionalProperties: false
    PatchedGroupRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 150
        company_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
        unique_identifier:
          type: string
          maxLength: 20
        is_social_login_enabled:
          type: boolean
          title: Social Login
          description: If this field is checked, the Social Login will be available
            to all users in this account.
        is_enabled_mfa_to_all_users:
          type: boolean
          title: Enforce Multi-Factor Authentication
          description: If this field is checked, the MFA will be mandatory for all
            users of this account.
        company_size:
          type: string
          nullable: true
          maxLength: 50
        job_function:
          type: string
          nullable: true
          maxLength: 50
        first_login:
          type: boolean
        address:
          type: string
          maxLength: 150
        complement:
          type: string
          nullable: true
          maxLength: 150
        city:
          type: string
        postal_code:
          type: string
          nullable: true
          maxLength: 15
        role:
          type: string
          nullable: true
          maxLength: 50
        billing_emails:
          type: string
          nullable: true
          maxLength: 255
        online_sales_region_id:
          type: integer
          nullable: true
        is_online_reseller:
          type: boolean
          title: Online Groups
        code:
          type: string
          title: Groups Code
          maxLength: 10
      additionalProperties: false
    PatchedOIDCIdPRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
        is_active:
          type: boolean
        authorization_url:
          type: string
          format: uri
          maxLength: 250
        userinfo_url:
          type: string
          format: uri
          maxLength: 250
        token_url:
          type: string
          format: uri
          maxLength: 250
        client_id:
          type: string
          maxLength: 256
        client_secret:
          type: string
          writeOnly: true
          maxLength: 256
        scopes:
          type: array
          items:
            type: string
      additionalProperties: false
    PatchedResellerRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 150
        company_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
        unique_identifier:
          type: string
          maxLength: 20
        is_social_login_enabled:
          type: boolean
          title: Social Login
          description: If this field is checked, the Social Login will be available
            to all users in this account.
        is_enabled_mfa_to_all_users:
          type: boolean
          title: Enforce Multi-Factor Authentication
          description: If this field is checked, the MFA will be mandatory for all
            users of this account.
        company_size:
          type: string
          nullable: true
          maxLength: 50
        job_function:
          type: string
          nullable: true
          maxLength: 50
        first_login:
          type: boolean
        address:
          type: string
          maxLength: 150
        complement:
          type: string
          nullable: true
          maxLength: 150
        city:
          type: string
        postal_code:
          type: string
          nullable: true
          maxLength: 15
        role:
          type: string
          nullable: true
          maxLength: 50
        currency_iso_code:
          type: string
          title: Currency of Bills
          maxLength: 3
        terms_of_service_url:
          type: string
          format: uri
          maxLength: 150
      additionalProperties: false
    PatchedSAMLIdPRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
        is_active:
          type: boolean
        sign_in_url:
          type: string
          format: uri
          maxLength: 250
        entity_id_url:
          type: string
          format: uri
          maxLength: 250
        certificate:
          type: string
          writeOnly: true
          pattern: -{5}BEGIN CERTIFICATE-{5}\s+[^-]+-{5}END CERTIFICATE-{5}
          maxLength: 4096
      additionalProperties: false
    PatchedTeamRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        is_active:
          type: boolean
          title: Active
        permissions_ids:
          type: array
          items:
            type: integer
          writeOnly: true
      additionalProperties: false
    PatchedUserPreferencesRequest:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 21
          pattern: ^[+\d()\-/.\s]*$
        country_call_code:
          type: string
          maxLength: 20
        mobile:
          type: string
          maxLength: 21
          pattern: ^[+\d()\-/.\s]*$
        timezone:
          $ref: '#/components/schemas/TimezoneEnum'
        two_factor_enabled:
          type: boolean
          title: Two-Factor
        is_account_owner:
          type: boolean
        password:
          type: string
          writeOnly: true
          maxLength: 128
        old_password:
          type: string
          writeOnly: true
        teams_ids:
          type: array
          items:
            type: integer
          writeOnly: true
          default: []
      additionalProperties: false
    Permission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 100
        group:
          type: string
          maxLength: 100
      required:
      - group
      - id
      - name
      - slug
      additionalProperties: false
    PermissionRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 100
        group:
          type: string
          maxLength: 100
      required:
      - group
      - name
      - slug
      additionalProperties: false
    PersonalToken:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        key:
          type: string
          readOnly: true
        user_id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
          maxLength: 256
      required:
      - created
      - expires_at
      - key
      - name
      - user_id
      - uuid
      additionalProperties: false
    PersonalTokenRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        created:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
          maxLength: 256
      required:
      - created
      - expires_at
      - name
      additionalProperties: false
    Reseller:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
        company_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
        unique_identifier:
          type: string
          maxLength: 20
        is_social_login_enabled:
          type: boolean
          title: Social Login
          description: If this field is checked, the Social Login will be available
            to all users in this account.
        is_enabled_mfa_to_all_users:
          type: boolean
          title: Enforce Multi-Factor Authentication
          description: If this field is checked, the MFA will be mandatory for all
            users of this account.
        company_size:
          type: string
          nullable: true
          maxLength: 50
        job_function:
          type: string
          nullable: true
          maxLength: 50
        country:
          type: string
          readOnly: true
        first_login:
          type: boolean
        address:
          type: string
          maxLength: 150
        complement:
          type: string
          nullable: true
          maxLength: 150
        city:
          type: string
        postal_code:
          type: string
          nullable: true
          maxLength: 15
        region:
          type: string
          readOnly: true
        role:
          type: string
          nullable: true
          maxLength: 50
        currency_iso_code:
          type: string
          title: Currency of Bills
          maxLength: 3
        terms_of_service_url:
          type: string
          format: uri
          maxLength: 150
        is_deleted:
          type: boolean
          readOnly: true
          title: Deleted
        parent_id:
          type: integer
          nullable: true
          readOnly: true
      required:
      - address
      - city
      - country
      - currency_iso_code
      - id
      - is_deleted
      - name
      - parent_id
      - region
      - terms_of_service_url
      additionalProperties: false
    ResellerRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 150
        company_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
        unique_identifier:
          type: string
          maxLength: 20
        is_social_login_enabled:
          type: boolean
          title: Social Login
          description: If this field is checked, the Social Login will be available
            to all users in this account.
        is_enabled_mfa_to_all_users:
          type: boolean
          title: Enforce Multi-Factor Authentication
          description: If this field is checked, the MFA will be mandatory for all
            users of this account.
        company_size:
          type: string
          nullable: true
          maxLength: 50
        job_function:
          type: string
          nullable: true
          maxLength: 50
        first_login:
          type: boolean
        address:
          type: string
          maxLength: 150
        complement:
          type: string
          nullable: true
          maxLength: 150
        city:
          type: string
        postal_code:
          type: string
          nullable: true
          maxLength: 15
        role:
          type: string
          nullable: true
          maxLength: 50
        currency_iso_code:
          type: string
          title: Currency of Bills
          maxLength: 3
        terms_of_service_url:
          type: string
          format: uri
          maxLength: 150
      required:
      - address
      - city
      - currency_iso_code
      - name
      - terms_of_service_url
      additionalProperties: false
    ResponseAccount:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/StateEnum'
        data:
          $ref: '#/components/schemas/Account'
      required:
      - data
      - state
      additionalProperties: false
    ResponseCustomUser:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/StateEnum'
        data:
          $ref: '#/components/schemas/CustomUser'
      required:
      - data
      - state
      additionalProperties: false
    ResponseDeleteCustomUser:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/StateEnum'
        data:
          allOf:
          - $ref: '#/components/schemas/CustomUser'
          nullable: true
      required:
      - data
      - state
      additionalProperties: false
    ResponseDeleteTeam:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/StateEnum'
        data:
          allOf:
          - $ref: '#/components/schemas/Team'
          nullable: true
      required:
      - data
      - state
      additionalProperties: false
    ResponseModeEnum:
      enum:
      - post
      - query
      - fragment
      type: string
      additionalProperties: false
    ResponseTeam:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/StateEnum'
        data:
          $ref: '#/components/schemas/Team'
      required:
      - data
      - state
      additionalProperties: false
    ResponseUserPreferences:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/StateEnum'
        data:
          $ref: '#/components/schemas/UserPreferences'
      required:
      - data
      - state
      additionalProperties: false
    SAMLIdP:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 50
        is_active:
          type: boolean
        sign_in_url:
          type: string
          format: uri
          maxLength: 250
        entity_id_url:
          type: string
          format: uri
          maxLength: 250
        login_url:
          type: string
          readOnly: true
        acs_url:
          type: string
          readOnly: true
        metadata_url:
          type: string
          readOnly: true
        signature_algorithm:
          allOf:
          - $ref: '#/components/schemas/SignatureAlgorithmEnum'
          readOnly: true
          description: Type of signature algorithm used by the IdP to sign SAML Responses/Assertions.
      required:
      - acs_url
      - entity_id_url
      - is_active
      - login_url
      - metadata_url
      - name
      - sign_in_url
      - signature_algorithm
      - uuid
      additionalProperties: false
    SAMLIdPRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
        is_active:
          type: boolean
        sign_in_url:
          type: string
          format: uri
          maxLength: 250
        entity_id_url:
          type: string
          format: uri
          maxLength: 250
        certificate:
          type: string
          writeOnly: true
          pattern: -{5}BEGIN CERTIFICATE-{5}\s+[^-]+-{5}END CERTIFICATE-{5}
          maxLength: 4096
      required:
      - certificate
      - entity_id_url
      - is_active
      - name
      - sign_in_url
      additionalProperties: false
    SetNewPasswordRequest:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
          maxLength: 50
          pattern: '[0-9A-Za-z]{1,13}-[0-9A-Za-z]{1,20}'
        password:
          type: string
          writeOnly: true
          maxLength: 100
      required:
      - password
      - token
      additionalProperties: false
    SignatureAlgorithmEnum:
      enum:
      - sha-1
      - sha-256
      type: string
      additionalProperties: false
    StatusEnum:
      enum:
      - REGULAR
      - TRIAL
      - BLOCKED
      - ONLINE
      - DEFAULTING
      type: string
      additionalProperties: false
    Team:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
          readOnly: true
        is_active:
          type: boolean
          title: Active
      required:
      - id
      - name
      - Permissions
      additionalProperties: false
    TeamRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        is_active:
          type: boolean
          title: Active
        permissions_ids:
          type: array
          items:
            type: integer
          writeOnly: true
      required:
      - name
      - Permissions_ids
      additionalProperties: false
    TimezoneEnum:
      enum:
      - Etc/GMT+12
      - Etc/GMT+11
      - Pacific/Midway
      - Pacific/Niue
      - Pacific/Pago_Pago
      - Pacific/Samoa
      - US/Samoa
      - America/Adak
      - America/Atka
      - Etc/GMT+10
      - HST
      - Pacific/Honolulu
      - Pacific/Johnston
      - Pacific/Rarotonga
      - Pacific/Tahiti
      - US/Aleutian
      - US/Hawaii
      - Pacific/Marquesas
      - America/Anchorage
      - America/Juneau
      - America/Metlakatla
      - America/Nome
      - America/Sitka
      - America/Yakutat
      - Etc/GMT+9
      - Pacific/Gambier
      - US/Alaska
      - America/Ensenada
      - America/Los_Angeles
      - America/Santa_Isabel
      - America/Tijuana
      - America/Vancouver
      - Canada/Pacific
      - Etc/GMT+8
      - Mexico/BajaNorte
      - PST8PDT
      - Pacific/Pitcairn
      - US/Pacific
      - America/Boise
      - America/Cambridge_Bay
      - America/Chihuahua
      - America/Creston
      - America/Dawson
      - America/Dawson_Creek
      - America/Denver
      - America/Edmonton
      - America/Fort_Nelson
      - America/Hermosillo
      - America/Inuvik
      - America/Mazatlan
      - America/Ojinaga
      - America/Phoenix
      - America/Shiprock
      - America/Whitehorse
      - America/Yellowknife
      - Canada/Mountain
      - Canada/Yukon
      - Etc/GMT+7
      - MST
      - MST7MDT
      - Mexico/BajaSur
      - Navajo
      - US/Arizona
      - US/Mountain
      - America/Bahia_Banderas
      - America/Belize
      - America/Chicago
      - America/Costa_Rica
      - America/El_Salvador
      - America/Guatemala
      - America/Indiana/Knox
      - America/Indiana/Tell_City
      - America/Knox_IN
      - America/Managua
      - America/Matamoros
      - America/Menominee
      - America/Merida
      - America/Mexico_City
      - America/Monterrey
      - America/North_Dakota/Beulah
      - America/North_Dakota/Center
      - America/North_Dakota/New_Salem
      - America/Rainy_River
      - America/Rankin_Inlet
      - America/Regina
      - America/Resolute
      - America/Swift_Current
      - America/Tegucigalpa
      - America/Winnipeg
      - CST6CDT
      - Canada/Central
      - Canada/Saskatchewan
      - Etc/GMT+6
      - Mexico/General
      - Pacific/Galapagos
      - US/Central
      - US/Indiana-Starke
      - America/Atikokan
      - America/Bogota
      - America/Cancun
      - America/Cayman
      - America/Coral_Harbour
      - America/Detroit
      - America/Eirunepe
      - America/Fort_Wayne
      - America/Grand_Turk
      - America/Guayaquil
      - America/Havana
      - America/Indiana/Indianapolis
      - America/Indiana/Marengo
      - America/Indiana/Petersburg
      - America/Indiana/Vevay
      - America/Indiana/Vincennes
      - America/Indiana/Winamac
      - America/Indianapolis
      - America/Iqaluit
      - America/Jamaica
      - America/Kentucky/Louisville
      - America/Kentucky/Monticello
      - America/Lima
      - America/Louisville
      - America/Montreal
      - America/Nassau
      - America/New_York
      - America/Nipigon
      - America/Panama
      - America/Pangnirtung
      - America/Port-au-Prince
      - America/Porto_Acre
      - America/Rio_Branco
      - America/Thunder_Bay
      - America/Toronto
      - Brazil/Acre
      - Canada/Eastern
      - Chile/EasterIsland
      - Cuba
      - EST
      - EST5EDT
      - Etc/GMT+5
      - Jamaica
      - Pacific/Easter
      - US/East-Indiana
      - US/Eastern
      - US/Michigan
      - America/Anguilla
      - America/Antigua
      - America/Aruba
      - America/Barbados
      - America/Blanc-Sablon
      - America/Boa_Vista
      - America/Campo_Grande
      - America/Caracas
      - America/Cuiaba
      - America/Curacao
      - America/Dominica
      - America/Glace_Bay
      - America/Goose_Bay
      - America/Grenada
      - America/Guadeloupe
      - America/Guyana
      - America/Halifax
      - America/Kralendijk
      - America/La_Paz
      - America/Lower_Princes
      - America/Manaus
      - America/Marigot
      - America/Martinique
      - America/Moncton
      - America/Montserrat
      - America/Port_of_Spain
      - America/Porto_Velho
      - America/Puerto_Rico
      - America/Santo_Domingo
      - America/St_Barthelemy
      - America/St_Kitts
      - America/St_Lucia
      - America/St_Thomas
      - America/St_Vincent
      - America/Thule
      - America/Tortola
      - America/Virgin
      - Atlantic/Bermuda
      - Brazil/West
      - Canada/Atlantic
      - Etc/GMT+4
      - America/St_Johns
      - Canada/Newfoundland
      - America/Araguaina
      - America/Argentina/Buenos_Aires
      - America/Argentina/Catamarca
      - America/Argentina/ComodRivadavia
      - America/Argentina/Cordoba
      - America/Argentina/Jujuy
      - America/Argentina/La_Rioja
      - America/Argentina/Mendoza
      - America/Argentina/Rio_Gallegos
      - America/Argentina/Salta
      - America/Argentina/San_Juan
      - America/Argentina/San_Luis
      - America/Argentina/Tucuman
      - America/Argentina/Ushuaia
      - America/Asuncion
      - America/Bahia
      - America/Belem
      - America/Buenos_Aires
      - America/Catamarca
      - America/Cayenne
      - America/Cordoba
      - America/Fortaleza
      - America/Godthab
      - America/Jujuy
      - America/Maceio
      - America/Mendoza
      - America/Miquelon
      - America/Montevideo
      - America/Nuuk
      - America/Paramaribo
      - America/Punta_Arenas
      - America/Recife
      - America/Rosario
      - America/Santarem
      - America/Santiago
      - America/Sao_Paulo
      - Antarctica/Palmer
      - Antarctica/Rothera
      - Atlantic/Stanley
      - Brazil/East
      - Chile/Continental
      - Etc/GMT+3
      - America/Noronha
      - Atlantic/South_Georgia
      - Brazil/DeNoronha
      - Etc/GMT+2
      - America/Scoresbysund
      - Atlantic/Azores
      - Atlantic/Cape_Verde
      - Etc/GMT+1
      - Africa/Abidjan
      - Africa/Accra
      - Africa/Bamako
      - Africa/Banjul
      - Africa/Bissau
      - Africa/Conakry
      - Africa/Dakar
      - Africa/Freetown
      - Africa/Lome
      - Africa/Monrovia
      - Africa/Nouakchott
      - Africa/Ouagadougou
      - Africa/Sao_Tome
      - Africa/Timbuktu
      - America/Danmarkshavn
      - Antarctica/Troll
      - Atlantic/Canary
      - Atlantic/Faeroe
      - Atlantic/Faroe
      - Atlantic/Madeira
      - Atlantic/Reykjavik
      - Atlantic/St_Helena
      - Eire
      - Etc/GMT
      - Etc/GMT+0
      - Etc/GMT-0
      - Etc/GMT0
      - Etc/Greenwich
      - Etc/UCT
      - Etc/UTC
      - Etc/Universal
      - Etc/Zulu
      - Europe/Belfast
      - Europe/Dublin
      - Europe/Guernsey
      - Europe/Isle_of_Man
      - Europe/Jersey
      - Europe/Lisbon
      - Europe/London
      - GB
      - GB-Eire
      - GMT
      - GMT+0
      - GMT-0
      - GMT0
      - Greenwich
      - Iceland
      - Portugal
      - UCT
      - UTC
      - Universal
      - WET
      - Zulu
      - Africa/Algiers
      - Africa/Bangui
      - Africa/Brazzaville
      - Africa/Casablanca
      - Africa/Ceuta
      - Africa/Douala
      - Africa/El_Aaiun
      - Africa/Kinshasa
      - Africa/Lagos
      - Africa/Libreville
      - Africa/Luanda
      - Africa/Malabo
      - Africa/Ndjamena
      - Africa/Niamey
      - Africa/Porto-Novo
      - Africa/Tunis
      - Arctic/Longyearbyen
      - Atlantic/Jan_Mayen
      - CET
      - Etc/GMT-1
      - Europe/Amsterdam
      - Europe/Andorra
      - Europe/Belgrade
      - Europe/Berlin
      - Europe/Bratislava
      - Europe/Brussels
      - Europe/Budapest
      - Europe/Busingen
      - Europe/Copenhagen
      - Europe/Gibraltar
      - Europe/Ljubljana
      - Europe/Luxembourg
      - Europe/Madrid
      - Europe/Malta
      - Europe/Monaco
      - Europe/Oslo
      - Europe/Paris
      - Europe/Podgorica
      - Europe/Prague
      - Europe/Rome
      - Europe/San_Marino
      - Europe/Sarajevo
      - Europe/Skopje
      - Europe/Stockholm
      - Europe/Tirane
      - Europe/Vaduz
      - Europe/Vatican
      - Europe/Vienna
      - Europe/Warsaw
      - Europe/Zagreb
      - Europe/Zurich
      - MET
      - Poland
      - Africa/Blantyre
      - Africa/Bujumbura
      - Africa/Cairo
      - Africa/Gaborone
      - Africa/Harare
      - Africa/Johannesburg
      - Africa/Juba
      - Africa/Khartoum
      - Africa/Kigali
      - Africa/Lubumbashi
      - Africa/Lusaka
      - Africa/Maputo
      - Africa/Maseru
      - Africa/Mbabane
      - Africa/Tripoli
      - Africa/Windhoek
      - Asia/Amman
      - Asia/Beirut
      - Asia/Damascus
      - Asia/Famagusta
      - Asia/Gaza
      - Asia/Hebron
      - Asia/Jerusalem
      - Asia/Nicosia
      - Asia/Tel_Aviv
      - EET
      - Egypt
      - Etc/GMT-2
      - Europe/Athens
      - Europe/Bucharest
      - Europe/Chisinau
      - Europe/Helsinki
      - Europe/Kaliningrad
      - Europe/Kiev
      - Europe/Mariehamn
      - Europe/Nicosia
      - Europe/Riga
      - Europe/Sofia
      - Europe/Tallinn
      - Europe/Tiraspol
      - Europe/Uzhgorod
      - Europe/Vilnius
      - Europe/Zaporozhye
      - Israel
      - Libya
      - Africa/Addis_Ababa
      - Africa/Asmara
      - Africa/Asmera
      - Africa/Dar_es_Salaam
      - Africa/Djibouti
      - Africa/Kampala
      - Africa/Mogadishu
      - Africa/Nairobi
      - Antarctica/Syowa
      - Asia/Aden
      - Asia/Baghdad
      - Asia/Bahrain
      - Asia/Istanbul
      - Asia/Kuwait
      - Asia/Qatar
      - Asia/Riyadh
      - Etc/GMT-3
      - Europe/Istanbul
      - Europe/Kirov
      - Europe/Minsk
      - Europe/Moscow
      - Europe/Simferopol
      - Europe/Volgograd
      - Indian/Antananarivo
      - Indian/Comoro
      - Indian/Mayotte
      - Turkey
      - W-SU
      - Asia/Tehran
      - Iran
      - Asia/Baku
      - Asia/Dubai
      - Asia/Muscat
      - Asia/Tbilisi
      - Asia/Yerevan
      - Etc/GMT-4
      - Europe/Astrakhan
      - Europe/Samara
      - Europe/Saratov
      - Europe/Ulyanovsk
      - Indian/Mahe
      - Indian/Mauritius
      - Indian/Reunion
      - Asia/Kabul
      - Antarctica/Mawson
      - Asia/Aqtau
      - Asia/Aqtobe
      - Asia/Ashgabat
      - Asia/Ashkhabad
      - Asia/Atyrau
      - Asia/Dushanbe
      - Asia/Karachi
      - Asia/Oral
      - Asia/Qyzylorda
      - Asia/Samarkand
      - Asia/Tashkent
      - Asia/Yekaterinburg
      - Etc/GMT-5
      - Indian/Kerguelen
      - Indian/Maldives
      - Asia/Calcutta
      - Asia/Colombo
      - Asia/Kolkata
      - Asia/Kathmandu
      - Asia/Katmandu
      - Antarctica/Vostok
      - Asia/Almaty
      - Asia/Bishkek
      - Asia/Dacca
      - Asia/Dhaka
      - Asia/Kashgar
      - Asia/Omsk
      - Asia/Qostanay
      - Asia/Thimbu
      - Asia/Thimphu
      - Asia/Urumqi
      - Etc/GMT-6
      - Indian/Chagos
      - Asia/Rangoon
      - Asia/Yangon
      - Indian/Cocos
      - Antarctica/Davis
      - Asia/Bangkok
      - Asia/Barnaul
      - Asia/Ho_Chi_Minh
      - Asia/Hovd
      - Asia/Jakarta
      - Asia/Krasnoyarsk
      - Asia/Novokuznetsk
      - Asia/Novosibirsk
      - Asia/Phnom_Penh
      - Asia/Pontianak
      - Asia/Saigon
      - Asia/Tomsk
      - Asia/Vientiane
      - Etc/GMT-7
      - Indian/Christmas
      - Asia/Brunei
      - Asia/Choibalsan
      - Asia/Chongqing
      - Asia/Chungking
      - Asia/Harbin
      - Asia/Hong_Kong
      - Asia/Irkutsk
      - Asia/Kuala_Lumpur
      - Asia/Kuching
      - Asia/Macao
      - Asia/Macau
      - Asia/Makassar
      - Asia/Manila
      - Asia/Shanghai
      - Asia/Singapore
      - Asia/Taipei
      - Asia/Ujung_Pandang
      - Asia/Ulaanbaatar
      - Asia/Ulan_Bator
      - Australia/Perth
      - Australia/West
      - Etc/GMT-8
      - Hongkong
      - PRC
      - ROC
      - Singapore
      - Australia/Eucla
      - Asia/Chita
      - Asia/Dili
      - Asia/Jayapura
      - Asia/Khandyga
      - Asia/Pyongyang
      - Asia/Seoul
      - Asia/Tokyo
      - Asia/Yakutsk
      - Etc/GMT-9
      - Japan
      - Pacific/Palau
      - ROK
      - Australia/Darwin
      - Australia/North
      - Antarctica/DumontDUrville
      - Asia/Ust-Nera
      - Asia/Vladivostok
      - Australia/Brisbane
      - Australia/Lindeman
      - Australia/Queensland
      - Etc/GMT-10
      - Pacific/Chuuk
      - Pacific/Guam
      - Pacific/Port_Moresby
      - Pacific/Saipan
      - Pacific/Truk
      - Pacific/Yap
      - Australia/Adelaide
      - Australia/Broken_Hill
      - Australia/South
      - Australia/Yancowinna
      - Antarctica/Casey
      - Antarctica/Macquarie
      - Asia/Magadan
      - Asia/Sakhalin
      - Asia/Srednekolymsk
      - Australia/ACT
      - Australia/Canberra
      - Australia/Currie
      - Australia/Hobart
      - Australia/LHI
      - Australia/Lord_Howe
      - Australia/Melbourne
      - Australia/NSW
      - Australia/Sydney
      - Australia/Tasmania
      - Australia/Victoria
      - Etc/GMT-11
      - Pacific/Bougainville
      - Pacific/Efate
      - Pacific/Guadalcanal
      - Pacific/Kosrae
      - Pacific/Noumea
      - Pacific/Pohnpei
      - Pacific/Ponape
      - Asia/Anadyr
      - Asia/Kamchatka
      - Etc/GMT-12
      - Kwajalein
      - Pacific/Funafuti
      - Pacific/Kwajalein
      - Pacific/Majuro
      - Pacific/Nauru
      - Pacific/Norfolk
      - Pacific/Tarawa
      - Pacific/Wake
      - Pacific/Wallis
      - Antarctica/McMurdo
      - Antarctica/South_Pole
      - Etc/GMT-13
      - NZ
      - Pacific/Auckland
      - Pacific/Enderbury
      - Pacific/Fakaofo
      - Pacific/Fiji
      - Pacific/Tongatapu
      - NZ-CHAT
      - Pacific/Chatham
      - Etc/GMT-14
      - Pacific/Apia
      - Pacific/Kiritimati
      type: string
      additionalProperties: false
    UserPreferences:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        email:
          type: string
          format: email
          maxLength: 254
        is_staff:
          type: boolean
          readOnly: true
          title: Staff Status
        is_active:
          type: boolean
          readOnly: true
          title: Active
        phone:
          type: string
          maxLength: 21
          pattern: ^[+\d()\-/.\s]*$
        country_call_code:
          type: string
          maxLength: 20
        mobile:
          type: string
          maxLength: 21
          pattern: ^[+\d()\-/.\s]*$
        date_joined:
          type: string
          format: date-time
          readOnly: true
        timezone:
          $ref: '#/components/schemas/TimezoneEnum'
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageEnum'
          readOnly: true
        is_trial:
          type: boolean
          readOnly: true
          title: Trial
        two_factor_enabled:
          type: boolean
          title: Two-Factor
        is_account_owner:
          type: boolean
        teams:
          type: array
          items:
            $ref: '#/components/schemas/UserTeams'
          readOnly: true
      required:
      - date_joined
      - email
      - first_name
      - id
      - is_active
      - is_staff
      - is_trial
      - language
      - last_login
      - last_name
      - Teams
      additionalProperties: false
    UserTeams:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        is_active:
          type: boolean
          title: Active
      required:
      - id
      - name
      additionalProperties: false
    UserTeamsRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        is_active:
          type: boolean
          title: Active
      required:
      - name
      additionalProperties: false
    Bucket:
      type: object
      properties:
        name:
          type: string
          readOnly: true
          maxLength: 63
          minLength: 6
        edge_access:
          $ref: '#/components/schemas/EdgeAccessEnum'
      required:
      - edge_access
      - name
    BucketCreate:
      type: object
      properties:
        name:
          type: string
          maxLength: 63
          minLength: 6
        edge_access:
          $ref: '#/components/schemas/EdgeAccessEnum'
      required:
      - edge_access
      - name
    BucketObject:
      type: object
      properties:
        key:
          type: string
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
        size:
          type: integer
          readOnly: true
        etag:
          type: string
          readOnly: true
      required:
      - etag
      - key
      - last_modified
      - size
    EdgeAccessEnum:
      enum:
      - read_only
      - read_write
      - restricted
      type: string
    PaginatedBucketList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Bucket'
    PaginatedBucketObjectList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BucketObject'
    PatchedBucket:
      type: object
      properties:
        name:
          type: string
          readOnly: true
          maxLength: 63
          minLength: 6
        edge_access:
          $ref: '#/components/schemas/EdgeAccessEnum'
    ResponseBucket:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State7b9Enum'
        data:
          $ref: '#/components/schemas/Bucket'
      required:
      - data
      - state
    ResponseDeleteBucket:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State7b9Enum'
        data:
          allOf:
          - $ref: '#/components/schemas/Bucket'
          nullable: true
      required:
      - data
      - state
    State7b9Enum:
      enum:
      - pending
      - executed
      type: string
    Success object operation:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/Success object operationStateEnum'
        data:
          $ref: '#/components/schemas/response data'
      required:
      - data
      - state
    Success object operationStateEnum:
      enum:
      - executed
      - pending
      type: string
    response data:
      type: object
      properties:
        object_key:
          type: string
      required:
      - object_key
    PostStorageApiBucketsBucketNameObjectsObjectKeyRequestBody:
      type: object
    PutStorageApiBucketsBucketNameObjectsObjectKeyRequestBody:
      type: object
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
 